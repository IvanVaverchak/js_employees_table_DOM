{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","sortBy","tBody","rows","querySelectorAll","minAge","maxAge","insertAdjacentHTML","pushNotification","title","description","type","notif","setTimeout","forEach","message","remove","form","button","inputName","inputAge","inputPosition","inputSalary","inputOffice","toNum","element","innerText","slice","replaceAll","toNumAge","addEventListener","e","preventDefault","target","reset","nameLength","value","length","age","columns","parentNode","children","column","i","parents","sorted","sort","sortForAge","arr","a","b","sortForSalary","sortForString","localeCompare","reverse","append","row","classList","add","cell","isEditing","previousTextContent","input","createElement","setEditedCellValue","cellIndex","Array","from","indexOf","inputValue","trim","inputWithDolar","parseInt","split","join","toLocaleString","inputWithoutDolar","textContent","tagName","appendChild","focus","code"],"mappings":"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","file":"main.13d6abda.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst sortBy = document.querySelector('tr');\nconst tBody = document.querySelector('tbody');\nconst rows = tBody.querySelectorAll('tr');\nconst minAge = 18;\nconst maxAge = 90;\n\nbody.insertAdjacentHTML('beforeend', `\n<form class=\"new-employee-form\">\n<label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n<label>Position:\n  <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n</label>\n<label>Office:\n  <select name=\"office\" data-qa=\"office\" required>\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New York\">New York/option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n  </select></label>\n<label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n<label>Salary:\n<input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n</label>\n<button type=\"submit\">Save to table</button>\n</form>\n`);\n\nconst pushNotification = (title, description, type) => {\n  body.insertAdjacentHTML('beforeend', `\n<div class=\"notification ${type}\" data-qa=\"notification\">\n<h2 class=\"title\">\n  ${title}\n</h2>\n\n<p>\n  ${description}\n</p>\n</div>\n`);\n\n  const notif = document.querySelectorAll('.notification');\n\n  setTimeout(() => {\n    notif.forEach(message => message.remove());\n  }, 3000);\n};\n\nconst form = document.querySelector('form');\nconst button = form.querySelector('button');\nconst inputName = form.querySelector('input[data-qa=\"name\"]');\nconst inputAge = form.querySelector('input[data-qa=\"age\"]');\nconst inputPosition = form.querySelector('input[data-qa=\"position\"]');\nconst inputSalary = form.querySelector('input[data-qa=\"salary\"]');\nconst inputOffice = form.querySelector('select[data-qa=\"office\"]');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault(); e.target.reset();\n});\n\nbutton.addEventListener('click', e => {\n  const nameLength = inputName.value.length;\n  const age = inputAge.value;\n\n  if (nameLength < 4 || age < minAge || age > maxAge) {\n    pushNotification('Title of Error message',\n      'Message example.\\n '\n      + 'Notification should contain title and description.', 'error');\n  } else {\n    pushNotification('Title of Success message',\n      'Message example.\\n '\n      + 'Notification should contain title and description.', 'success');\n\n    tBody.insertAdjacentHTML('beforeend', `\n    <tr>\n    <td>${inputName.value}</td>\n    <td>${inputPosition.value}</td>\n    <td>${inputOffice.value}</td>\n    <td>${inputAge.value}</td>\n    <td>$${inputSalary.value.slice(0, -3)},${inputSalary.value.slice(-3)}</td>\n  </tr>\n    `);\n  }\n});\n\nfunction toNum(element) {\n  return +element.innerText.slice(1).replaceAll(',', '');\n}\n\nfunction toNumAge(element) {\n  return +element.innerText;\n}\n\nsortBy.addEventListener('click', e => {\n  const columns = e.target.parentNode.children;\n\n  [...columns].forEach((column, i) => {\n    if (e.target.parentNode.children[i].innerText === e.target.innerText) {\n      const parents = document.querySelector('tbody');\n      const sort = parents.querySelectorAll('tr');\n      let sorted;\n\n      const sortForAge = (arr) => {\n        return arr.sort((a, b) =>\n          toNumAge(a.children[i]) - toNumAge(b.children[i]));\n      };\n\n      const sortForSalary = (arr) => {\n        return arr.sort((a, b) =>\n          toNum(a.children[i]) - toNum(b.children[i]));\n      };\n\n      const sortForString = (arr) => {\n        return arr.sort((a, b) =>\n          a.children[i].innerText.localeCompare(b.children[i].innerText));\n      };\n\n      switch (e.target.parentNode.children[i].innerText) {\n        case 'Salary':\n          sort[0] === sortForSalary([...sort])[0]\n            ? sorted = sortForSalary([...sort]).reverse()\n            : sorted = sortForSalary([...sort]);\n          break;\n\n        case 'Age':\n          sort[0] === sortForAge([...sort])[0]\n            ? sorted = sortForAge([...sort]).reverse()\n            : sorted = sortForAge([...sort]);\n\n          break;\n\n        default:\n          sort[0] === sortForString([...sort])[0]\n            ? sorted = sortForString([...sort]).reverse()\n            : sorted = sortForString([...sort]);\n      }\n\n      parents.append(...sorted);\n    }\n  });\n});\n\nrows.forEach(row => {\n  addEventListener('click', e => {\n    row.classList.remove('active');\n\n    if (e.target.parentNode.innerText === row.innerText) {\n      row.classList.add('active');\n    }\n  });\n});\n\nlet isEditing = false;\nlet cell;\nlet previousTextContent = '';\nconst input = document.createElement('input');\n\ntBody.addEventListener('dblclick', (e) => {\n  if (!isEditing && e.target.tagName === 'TD') {\n    isEditing = true;\n    cell = e.target;\n    previousTextContent = cell.textContent;\n    input.classList = 'cell-input';\n    input.value = previousTextContent;\n    cell.textContent = '';\n    cell.appendChild(input);\n    input.focus();\n  }\n});\n\ntBody.addEventListener('keydown', (e) => {\n  if (e.code !== 'Enter' || !isEditing) {\n    return;\n  }\n\n  setEditedCellValue();\n});\n\ninput.addEventListener('blur', (e) => {\n  setEditedCellValue();\n});\n\nfunction setEditedCellValue() {\n  if (isEditing) {\n    const cellIndex = Array.from(cell.parentNode.children).indexOf(cell);\n    const inputValue = input.value.trim();\n    const inputWithDolar = `$${parseInt(inputValue.split(',').join('').slice(1)\n    ).toLocaleString('en-US')}`;\n    const inputWithoutDolar = `$${parseInt(inputValue.split(',').join('')\n    ).toLocaleString('en-US')}`;\n\n    switch (true) {\n      case inputValue && cellIndex === 4:\n        cell.textContent\n          = inputValue.slice(0, 1) === '$'\n            ? inputWithDolar\n            : inputWithoutDolar;\n        break;\n      case inputValue && cellIndex !== 4:\n        cell.textContent = inputValue;\n        break;\n      case !inputValue:\n        cell.textContent = previousTextContent;\n    }\n\n    isEditing = false;\n  }\n}\n"]}